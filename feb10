---
title: "Introduction to R Syntax"
output: html_notebook
---
```{r}

message <- 'Should I pack an umbrella?'
weather <- 'cloudy'
high_chance_of_rain <- TRUE
if(weather=='cloudy' & high_chance_of_rain){
  message<-'Pack umbrella!'
} else{
message <- 'No need for umbrella!'
}
print(message)


sort(c(2,4,10,5,1)); # Outputs c(1,2,4,5,10)
length(c(2,4,10,5,1)); # Outputs 5
sum(5,15,10) #Outputs 30

data <- c(120,22,22,31,15,120)
unique_vals<-unique(data)
print(unique_vals)

solution <- sqrt(49)
print(solution)
```

CSV = comma separated values

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
artists <- read_csv('artists.csv')
```

```{r}
# inspect data frame with pipe
artists %>%
head()

```

#select() takes a data frame as its first argument
#all additional arguments are the desired columns to select

```{r}
# select one column
# %>% is pipe and makes it the first argument
artist_groups <- artists%>%
select(group)
artist_groups

group_info <- artists%>%
select(group, spotify_monthly_listeners, year_founded)
group_info


#to exclude the columns you don't need
customers %>%
  select(-name,-phone)
  
  # select all columns except a set
df_cols_removed <- artists%>% 
select(-genre, -spotify_monthly_listeners, -year_founded)
df_cols_removed

#the comma is like an and for filtering
  orders %>%
  filter(shoe_material == 'faux-leather',price > 25)
  
  #making filtered set a variable then returning it
  popular_rock_groups <- 
artists%>%
filter(genre == 'Rock', spotify_monthly_listeners > 20000000)
popular_rock_groups
  
  #or
  orders %>%
  filter(shoe_type == 'clogs' | price < 20)
  
  #not (bang)
  orders %>%
  filter(!(shoe_color == red))
  
  
  
  # arrange rows in ascending order BY group
group_asc <-
artists%>%
arrange(group)
group_asc

#each line is "piped" to be the first argument to the next step in filtering and ordering this set
artists <- artists%>% 
select(-country, -year_founded, -albums) %>%
filter(spotify_monthly_listeners>20000000, genre!='Hip Hop') %>% 
arrange(desc(youtube_subscribers))
head(artists)








```
